// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class DateRangeValue : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Date))
            {
                writer.WritePropertyName("date");
                writer.WriteStringValue(Date.Value, "D");
            }
            if (Optional.IsDefined(IsCurrent))
            {
                writer.WritePropertyName("isCurrent");
                writer.WriteBooleanValue(IsCurrent.Value);
            }
            if (Optional.IsDefined(Day))
            {
                if (Day != null)
                {
                    writer.WritePropertyName("day");
                    writer.WriteNumberValue(Day.Value);
                }
                else
                {
                    writer.WriteNull("day");
                }
            }
            if (Optional.IsDefined(Month))
            {
                if (Month != null)
                {
                    writer.WritePropertyName("month");
                    writer.WriteNumberValue(Month.Value);
                }
                else
                {
                    writer.WriteNull("month");
                }
            }
            if (Optional.IsDefined(Year))
            {
                if (Year != null)
                {
                    writer.WritePropertyName("year");
                    writer.WriteNumberValue(Year.Value);
                }
                else
                {
                    writer.WriteNull("year");
                }
            }
            writer.WriteEndObject();
        }

        internal static DateRangeValue DeserializeDateRangeValue(JsonElement element)
        {
            Optional<DateTimeOffset> date = default;
            Optional<bool> isCurrent = default;
            Optional<int?> day = default;
            Optional<int?> month = default;
            Optional<int?> year = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("date"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    date = property.Value.GetDateTimeOffset("D");
                    continue;
                }
                if (property.NameEquals("isCurrent"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isCurrent = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("day"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        day = null;
                        continue;
                    }
                    day = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("month"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        month = null;
                        continue;
                    }
                    month = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("year"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        year = null;
                        continue;
                    }
                    year = property.Value.GetInt32();
                    continue;
                }
            }
            return new DateRangeValue(Optional.ToNullable(date), Optional.ToNullable(isCurrent), Optional.ToNullable(day), Optional.ToNullable(month), Optional.ToNullable(year));
        }
    }
}
