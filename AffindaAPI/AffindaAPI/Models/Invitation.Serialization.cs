// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class Invitation
    {
        internal static Invitation DeserializeInvitation(JsonElement element)
        {
            Optional<string> identifier = default;
            Optional<Organization> organization = default;
            Optional<string> email = default;
            Optional<OrganizationRole> role = default;
            Optional<InvitationStatus> status = default;
            Optional<DateTimeOffset> expiryDate = default;
            Optional<User> invitedBy = default;
            Optional<InvitationRespondedBy> respondedBy = default;
            Optional<DateTimeOffset> createdDt = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("identifier"))
                {
                    identifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("organization"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    organization = Organization.DeserializeOrganization(property.Value);
                    continue;
                }
                if (property.NameEquals("email"))
                {
                    email = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("role"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    role = new OrganizationRole(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("status"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    status = new InvitationStatus(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("expiryDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    expiryDate = property.Value.GetDateTimeOffset("D");
                    continue;
                }
                if (property.NameEquals("invitedBy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    invitedBy = User.DeserializeUser(property.Value);
                    continue;
                }
                if (property.NameEquals("respondedBy"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        respondedBy = null;
                        continue;
                    }
                    respondedBy = InvitationRespondedBy.DeserializeInvitationRespondedBy(property.Value);
                    continue;
                }
                if (property.NameEquals("createdDt"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    createdDt = property.Value.GetDateTimeOffset("O");
                    continue;
                }
            }
            return new Invitation(identifier.Value, organization.Value, email.Value, Optional.ToNullable(role), Optional.ToNullable(status), Optional.ToNullable(expiryDate), invitedBy.Value, respondedBy.Value, Optional.ToNullable(createdDt));
        }
    }
}
