// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class JobDescriptionSearchResult
    {
        internal static JobDescriptionSearchResult DeserializeJobDescriptionSearchResult(JsonElement element)
        {
            string identifier = default;
            float score = default;
            string pdf = default;
            JobTitleSearchScoreComponent jobTitle = default;
            ManagementLevelSearchScoreComponent managementLevel = default;
            ExperienceSearchScoreComponent experience = default;
            SkillsSearchScoreComponent skills = default;
            LanguagesSearchScoreComponent languages = default;
            LocationSearchScoreComponent location = default;
            EducationSearchScoreComponent education = default;
            Optional<OccupationGroupSearchScoreComponent> occupationGroup = default;
            SearchExpressionSearchScoreComponent searchExpression = default;
            string organizationName = default;
            Optional<IReadOnlyDictionary<string, ComponentsNqbw24SchemasCustomdatasearchscorecomponentAdditionalproperties>> customData = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("identifier"))
                {
                    identifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("score"))
                {
                    score = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("pdf"))
                {
                    pdf = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("jobTitle"))
                {
                    jobTitle = JobTitleSearchScoreComponent.DeserializeJobTitleSearchScoreComponent(property.Value);
                    continue;
                }
                if (property.NameEquals("managementLevel"))
                {
                    managementLevel = ManagementLevelSearchScoreComponent.DeserializeManagementLevelSearchScoreComponent(property.Value);
                    continue;
                }
                if (property.NameEquals("experience"))
                {
                    experience = ExperienceSearchScoreComponent.DeserializeExperienceSearchScoreComponent(property.Value);
                    continue;
                }
                if (property.NameEquals("skills"))
                {
                    skills = SkillsSearchScoreComponent.DeserializeSkillsSearchScoreComponent(property.Value);
                    continue;
                }
                if (property.NameEquals("languages"))
                {
                    languages = LanguagesSearchScoreComponent.DeserializeLanguagesSearchScoreComponent(property.Value);
                    continue;
                }
                if (property.NameEquals("location"))
                {
                    location = LocationSearchScoreComponent.DeserializeLocationSearchScoreComponent(property.Value);
                    continue;
                }
                if (property.NameEquals("education"))
                {
                    education = EducationSearchScoreComponent.DeserializeEducationSearchScoreComponent(property.Value);
                    continue;
                }
                if (property.NameEquals("occupationGroup"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    occupationGroup = OccupationGroupSearchScoreComponent.DeserializeOccupationGroupSearchScoreComponent(property.Value);
                    continue;
                }
                if (property.NameEquals("searchExpression"))
                {
                    searchExpression = SearchExpressionSearchScoreComponent.DeserializeSearchExpressionSearchScoreComponent(property.Value);
                    continue;
                }
                if (property.NameEquals("organizationName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        organizationName = null;
                        continue;
                    }
                    organizationName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("customData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, ComponentsNqbw24SchemasCustomdatasearchscorecomponentAdditionalproperties> dictionary = new Dictionary<string, ComponentsNqbw24SchemasCustomdatasearchscorecomponentAdditionalproperties>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, ComponentsNqbw24SchemasCustomdatasearchscorecomponentAdditionalproperties.DeserializeComponentsNqbw24SchemasCustomdatasearchscorecomponentAdditionalproperties(property0.Value));
                    }
                    customData = dictionary;
                    continue;
                }
            }
            return new JobDescriptionSearchResult(identifier, score, pdf, jobTitle, managementLevel, experience, skills, languages, location, education, occupationGroup.Value, searchExpression, organizationName, Optional.ToDictionary(customData));
        }
    }
}
