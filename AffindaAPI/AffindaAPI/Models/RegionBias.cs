// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Affinda.API.Models
{
    /// <summary> The RegionBias. </summary>
    public partial class RegionBias
    {
        /// <summary> Initializes a new instance of RegionBias. </summary>
        public RegionBias()
        {
            Countries = new ChangeTrackingList<string>();
            SquareCoordinates = new ChangeTrackingList<float>();
        }

        /// <summary> Initializes a new instance of RegionBias. </summary>
        /// <param name="country"> A single alpha-2 country code (e.g. AU) used by google geocoding service. </param>
        /// <param name="countries"> A list of alpha-2 country codes used by Pelias. </param>
        /// <param name="squareCoordinates"> A list of coordinates used by Pelias in the shape of [min_lon, min_lat, max_lon, max_lat]. </param>
        /// <param name="strict">
        /// If true, the location must be within the region, as opposed to prefering locations within the region.
        /// Default to false.
        /// 
        /// </param>
        internal RegionBias(string country, IList<string> countries, IList<float> squareCoordinates, bool? strict)
        {
            Country = country;
            Countries = countries;
            SquareCoordinates = squareCoordinates;
            Strict = strict;
        }

        /// <summary> A single alpha-2 country code (e.g. AU) used by google geocoding service. </summary>
        public string Country { get; set; }
        /// <summary> A list of alpha-2 country codes used by Pelias. </summary>
        public IList<string> Countries { get; set; }
        /// <summary> A list of coordinates used by Pelias in the shape of [min_lon, min_lat, max_lon, max_lat]. </summary>
        public IList<float> SquareCoordinates { get; set; }
        /// <summary>
        /// If true, the location must be within the region, as opposed to prefering locations within the region.
        /// Default to false.
        /// 
        /// </summary>
        public bool? Strict { get; set; }
    }
}
