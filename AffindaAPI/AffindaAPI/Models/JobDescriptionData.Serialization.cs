// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class JobDescriptionData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(JobTitle))
            {
                if (JobTitle != null)
                {
                    writer.WritePropertyName("jobTitle");
                    writer.WriteObjectValue(JobTitle);
                }
                else
                {
                    writer.WriteNull("jobTitle");
                }
            }
            if (Optional.IsDefined(ContactEmail))
            {
                if (ContactEmail != null)
                {
                    writer.WritePropertyName("contactEmail");
                    writer.WriteObjectValue(ContactEmail);
                }
                else
                {
                    writer.WriteNull("contactEmail");
                }
            }
            if (Optional.IsDefined(ContactName))
            {
                if (ContactName != null)
                {
                    writer.WritePropertyName("contactName");
                    writer.WriteObjectValue(ContactName);
                }
                else
                {
                    writer.WriteNull("contactName");
                }
            }
            if (Optional.IsDefined(ContactPhone))
            {
                if (ContactPhone != null)
                {
                    writer.WritePropertyName("contactPhone");
                    writer.WriteObjectValue(ContactPhone);
                }
                else
                {
                    writer.WriteNull("contactPhone");
                }
            }
            if (Optional.IsDefined(StartDate))
            {
                if (StartDate != null)
                {
                    writer.WritePropertyName("startDate");
                    writer.WriteObjectValue(StartDate);
                }
                else
                {
                    writer.WriteNull("startDate");
                }
            }
            if (Optional.IsDefined(EndDate))
            {
                if (EndDate != null)
                {
                    writer.WritePropertyName("endDate");
                    writer.WriteObjectValue(EndDate);
                }
                else
                {
                    writer.WriteNull("endDate");
                }
            }
            if (Optional.IsDefined(JobType))
            {
                if (JobType != null)
                {
                    writer.WritePropertyName("jobType");
                    writer.WriteObjectValue(JobType);
                }
                else
                {
                    writer.WriteNull("jobType");
                }
            }
            if (Optional.IsCollectionDefined(Languages))
            {
                writer.WritePropertyName("languages");
                writer.WriteStartArray();
                foreach (var item in Languages)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Skills))
            {
                writer.WritePropertyName("skills");
                writer.WriteStartArray();
                foreach (var item in Skills)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(OrganizationName))
            {
                if (OrganizationName != null)
                {
                    writer.WritePropertyName("organizationName");
                    writer.WriteObjectValue(OrganizationName);
                }
                else
                {
                    writer.WriteNull("organizationName");
                }
            }
            if (Optional.IsDefined(OrganizationWebsite))
            {
                if (OrganizationWebsite != null)
                {
                    writer.WritePropertyName("organizationWebsite");
                    writer.WriteObjectValue(OrganizationWebsite);
                }
                else
                {
                    writer.WriteNull("organizationWebsite");
                }
            }
            if (Optional.IsDefined(EducationLevel))
            {
                if (EducationLevel != null)
                {
                    writer.WritePropertyName("educationLevel");
                    writer.WriteObjectValue(EducationLevel);
                }
                else
                {
                    writer.WriteNull("educationLevel");
                }
            }
            if (Optional.IsDefined(EducationAccreditation))
            {
                if (EducationAccreditation != null)
                {
                    writer.WritePropertyName("educationAccreditation");
                    writer.WriteObjectValue(EducationAccreditation);
                }
                else
                {
                    writer.WriteNull("educationAccreditation");
                }
            }
            if (Optional.IsDefined(ExpectedRemuneration))
            {
                if (ExpectedRemuneration != null)
                {
                    writer.WritePropertyName("expectedRemuneration");
                    writer.WriteObjectValue(ExpectedRemuneration);
                }
                else
                {
                    writer.WriteNull("expectedRemuneration");
                }
            }
            if (Optional.IsDefined(Location))
            {
                if (Location != null)
                {
                    writer.WritePropertyName("location");
                    writer.WriteObjectValue(Location);
                }
                else
                {
                    writer.WriteNull("location");
                }
            }
            if (Optional.IsCollectionDefined(Certifications))
            {
                writer.WritePropertyName("certifications");
                writer.WriteStartArray();
                foreach (var item in Certifications)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(YearsExperience))
            {
                if (YearsExperience != null)
                {
                    writer.WritePropertyName("yearsExperience");
                    writer.WriteObjectValue(YearsExperience);
                }
                else
                {
                    writer.WriteNull("yearsExperience");
                }
            }
            if (Optional.IsDefined(RawText))
            {
                writer.WritePropertyName("rawText");
                writer.WriteStringValue(RawText);
            }
            foreach (var item in AdditionalProperties)
            {
                writer.WritePropertyName(item.Key);
                writer.WriteObjectValue(item.Value);
            }
            writer.WriteEndObject();
        }

        internal static JobDescriptionData DeserializeJobDescriptionData(JsonElement element)
        {
            Optional<JobTitleAnnotation> jobTitle = default;
            Optional<TextAnnotation> contactEmail = default;
            Optional<TextAnnotation> contactName = default;
            Optional<TextAnnotation> contactPhone = default;
            Optional<DateAnnotation> startDate = default;
            Optional<DateAnnotation> endDate = default;
            Optional<TextAnnotation> jobType = default;
            Optional<IList<LanguageAnnotation>> languages = default;
            Optional<IList<SkillAnnotation>> skills = default;
            Optional<TextAnnotation> organizationName = default;
            Optional<TextAnnotation> organizationWebsite = default;
            Optional<TextAnnotation> educationLevel = default;
            Optional<TextAnnotation> educationAccreditation = default;
            Optional<ExpectedRemunerationAnnotation> expectedRemuneration = default;
            Optional<LocationAnnotation> location = default;
            Optional<IList<TextAnnotation>> certifications = default;
            Optional<YearsExperienceAnnotation> yearsExperience = default;
            Optional<string> rawText = default;
            IDictionary<string, ComponentsTk0GmxSchemasJobdescriptiondataAdditionalproperties> additionalProperties = default;
            Dictionary<string, ComponentsTk0GmxSchemasJobdescriptiondataAdditionalproperties> additionalPropertiesDictionary = new Dictionary<string, ComponentsTk0GmxSchemasJobdescriptiondataAdditionalproperties>();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("jobTitle"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        jobTitle = null;
                        continue;
                    }
                    jobTitle = JobTitleAnnotation.DeserializeJobTitleAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("contactEmail"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        contactEmail = null;
                        continue;
                    }
                    contactEmail = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("contactName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        contactName = null;
                        continue;
                    }
                    contactName = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("contactPhone"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        contactPhone = null;
                        continue;
                    }
                    contactPhone = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("startDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        startDate = null;
                        continue;
                    }
                    startDate = DateAnnotation.DeserializeDateAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("endDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        endDate = null;
                        continue;
                    }
                    endDate = DateAnnotation.DeserializeDateAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("jobType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        jobType = null;
                        continue;
                    }
                    jobType = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("languages"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<LanguageAnnotation> array = new List<LanguageAnnotation>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(LanguageAnnotation.DeserializeLanguageAnnotation(item));
                        }
                    }
                    languages = array;
                    continue;
                }
                if (property.NameEquals("skills"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SkillAnnotation> array = new List<SkillAnnotation>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(SkillAnnotation.DeserializeSkillAnnotation(item));
                        }
                    }
                    skills = array;
                    continue;
                }
                if (property.NameEquals("organizationName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        organizationName = null;
                        continue;
                    }
                    organizationName = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("organizationWebsite"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        organizationWebsite = null;
                        continue;
                    }
                    organizationWebsite = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("educationLevel"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        educationLevel = null;
                        continue;
                    }
                    educationLevel = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("educationAccreditation"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        educationAccreditation = null;
                        continue;
                    }
                    educationAccreditation = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("expectedRemuneration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        expectedRemuneration = null;
                        continue;
                    }
                    expectedRemuneration = ExpectedRemunerationAnnotation.DeserializeExpectedRemunerationAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("location"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        location = null;
                        continue;
                    }
                    location = LocationAnnotation.DeserializeLocationAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("certifications"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<TextAnnotation> array = new List<TextAnnotation>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(TextAnnotation.DeserializeTextAnnotation(item));
                        }
                    }
                    certifications = array;
                    continue;
                }
                if (property.NameEquals("yearsExperience"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        yearsExperience = null;
                        continue;
                    }
                    yearsExperience = YearsExperienceAnnotation.DeserializeYearsExperienceAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("rawText"))
                {
                    rawText = property.Value.GetString();
                    continue;
                }
                additionalPropertiesDictionary.Add(property.Name, ComponentsTk0GmxSchemasJobdescriptiondataAdditionalproperties.DeserializeComponentsTk0GmxSchemasJobdescriptiondataAdditionalproperties(property.Value));
            }
            additionalProperties = additionalPropertiesDictionary;
            return new JobDescriptionData(jobTitle.Value, contactEmail.Value, contactName.Value, contactPhone.Value, startDate.Value, endDate.Value, jobType.Value, Optional.ToList(languages), Optional.ToList(skills), organizationName.Value, organizationWebsite.Value, educationLevel.Value, educationAccreditation.Value, expectedRemuneration.Value, location.Value, Optional.ToList(certifications), yearsExperience.Value, rawText.Value, additionalProperties);
        }
    }
}
