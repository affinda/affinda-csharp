// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class JobDescriptionData
    {
        internal static JobDescriptionData DeserializeJobDescriptionData(JsonElement element)
        {
            Optional<JobTitleAnnotation> jobTitle = default;
            Optional<TextAnnotationV2> contactEmail = default;
            Optional<TextAnnotationV2> contactName = default;
            Optional<TextAnnotationV2> contactPhone = default;
            Optional<DateAnnotation> startDate = default;
            Optional<DateAnnotation> endDate = default;
            Optional<TextAnnotationV2> jobType = default;
            Optional<IReadOnlyList<LanguageAnnotationV2>> languages = default;
            Optional<IReadOnlyList<SkillAnnotationV2>> skills = default;
            Optional<TextAnnotationV2> organizationName = default;
            Optional<TextAnnotationV2> organizationWebsite = default;
            Optional<TextAnnotationV2> educationLevel = default;
            Optional<TextAnnotationV2> educationAccreditation = default;
            Optional<ExpectedRemunerationAnnotationV2> expectedRemuneration = default;
            Optional<LocationAnnotationV2> location = default;
            Optional<IReadOnlyList<TextAnnotationV2>> certifications = default;
            Optional<YearsExperienceAnnotationV2> yearsExperience = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("jobTitle"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        jobTitle = null;
                        continue;
                    }
                    jobTitle = JobTitleAnnotation.DeserializeJobTitleAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("contactEmail"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        contactEmail = null;
                        continue;
                    }
                    contactEmail = TextAnnotationV2.DeserializeTextAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("contactName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        contactName = null;
                        continue;
                    }
                    contactName = TextAnnotationV2.DeserializeTextAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("contactPhone"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        contactPhone = null;
                        continue;
                    }
                    contactPhone = TextAnnotationV2.DeserializeTextAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("startDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        startDate = null;
                        continue;
                    }
                    startDate = DateAnnotation.DeserializeDateAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("endDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        endDate = null;
                        continue;
                    }
                    endDate = DateAnnotation.DeserializeDateAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("jobType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        jobType = null;
                        continue;
                    }
                    jobType = TextAnnotationV2.DeserializeTextAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("languages"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<LanguageAnnotationV2> array = new List<LanguageAnnotationV2>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(LanguageAnnotationV2.DeserializeLanguageAnnotationV2(item));
                        }
                    }
                    languages = array;
                    continue;
                }
                if (property.NameEquals("skills"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<SkillAnnotationV2> array = new List<SkillAnnotationV2>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(SkillAnnotationV2.DeserializeSkillAnnotationV2(item));
                        }
                    }
                    skills = array;
                    continue;
                }
                if (property.NameEquals("organizationName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        organizationName = null;
                        continue;
                    }
                    organizationName = TextAnnotationV2.DeserializeTextAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("organizationWebsite"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        organizationWebsite = null;
                        continue;
                    }
                    organizationWebsite = TextAnnotationV2.DeserializeTextAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("educationLevel"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        educationLevel = null;
                        continue;
                    }
                    educationLevel = TextAnnotationV2.DeserializeTextAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("educationAccreditation"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        educationAccreditation = null;
                        continue;
                    }
                    educationAccreditation = TextAnnotationV2.DeserializeTextAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("expectedRemuneration"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        expectedRemuneration = null;
                        continue;
                    }
                    expectedRemuneration = ExpectedRemunerationAnnotationV2.DeserializeExpectedRemunerationAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("location"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        location = null;
                        continue;
                    }
                    location = LocationAnnotationV2.DeserializeLocationAnnotationV2(property.Value);
                    continue;
                }
                if (property.NameEquals("certifications"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<TextAnnotationV2> array = new List<TextAnnotationV2>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        if (item.ValueKind == JsonValueKind.Null)
                        {
                            array.Add(null);
                        }
                        else
                        {
                            array.Add(TextAnnotationV2.DeserializeTextAnnotationV2(item));
                        }
                    }
                    certifications = array;
                    continue;
                }
                if (property.NameEquals("yearsExperience"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        yearsExperience = null;
                        continue;
                    }
                    yearsExperience = YearsExperienceAnnotationV2.DeserializeYearsExperienceAnnotationV2(property.Value);
                    continue;
                }
            }
            return new JobDescriptionData(jobTitle.Value, contactEmail.Value, contactName.Value, contactPhone.Value, startDate.Value, endDate.Value, jobType.Value, Optional.ToList(languages), Optional.ToList(skills), organizationName.Value, organizationWebsite.Value, educationLevel.Value, educationAccreditation.Value, expectedRemuneration.Value, location.Value, Optional.ToList(certifications), yearsExperience.Value);
        }
    }
}
