// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class JobTitleAnnotationParsedClassification : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(SocCode))
            {
                writer.WritePropertyName("socCode");
                writer.WriteNumberValue(SocCode.Value);
            }
            if (Optional.IsDefined(Title))
            {
                writer.WritePropertyName("title");
                writer.WriteStringValue(Title);
            }
            if (Optional.IsDefined(MinorGroup))
            {
                writer.WritePropertyName("minorGroup");
                writer.WriteStringValue(MinorGroup);
            }
            if (Optional.IsDefined(SubMajorGroup))
            {
                writer.WritePropertyName("subMajorGroup");
                writer.WriteStringValue(SubMajorGroup);
            }
            if (Optional.IsDefined(MajorGroup))
            {
                writer.WritePropertyName("majorGroup");
                writer.WriteStringValue(MajorGroup);
            }
            writer.WriteEndObject();
        }

        internal static JobTitleAnnotationParsedClassification DeserializeJobTitleAnnotationParsedClassification(JsonElement element)
        {
            Optional<float> socCode = default;
            Optional<string> title = default;
            Optional<string> minorGroup = default;
            Optional<string> subMajorGroup = default;
            Optional<string> majorGroup = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("socCode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    socCode = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("title"))
                {
                    title = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("minorGroup"))
                {
                    minorGroup = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("subMajorGroup"))
                {
                    subMajorGroup = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("majorGroup"))
                {
                    majorGroup = property.Value.GetString();
                    continue;
                }
            }
            return new JobTitleAnnotationParsedClassification(Optional.ToNullable(socCode), title.Value, minorGroup.Value, subMajorGroup.Value, majorGroup.Value);
        }
    }
}
