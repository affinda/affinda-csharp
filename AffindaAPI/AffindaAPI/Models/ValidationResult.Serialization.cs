// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class ValidationResult : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("id");
            writer.WriteNumberValue(Id);
            writer.WritePropertyName("annotations");
            writer.WriteStartArray();
            foreach (var item in Annotations)
            {
                writer.WriteNumberValue(item);
            }
            writer.WriteEndArray();
            writer.WritePropertyName("passed");
            writer.WriteBooleanValue(Passed);
            writer.WritePropertyName("ruleSlug");
            writer.WriteStringValue(RuleSlug);
            writer.WritePropertyName("message");
            writer.WriteStringValue(Message);
            writer.WritePropertyName("document");
            writer.WriteStringValue(Document);
            writer.WriteEndObject();
        }

        internal static ValidationResult DeserializeValidationResult(JsonElement element)
        {
            int id = default;
            IList<int> annotations = default;
            bool passed = default;
            string ruleSlug = default;
            string message = default;
            string document = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("annotations"))
                {
                    List<int> array = new List<int>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetInt32());
                    }
                    annotations = array;
                    continue;
                }
                if (property.NameEquals("passed"))
                {
                    passed = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("ruleSlug"))
                {
                    ruleSlug = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("message"))
                {
                    message = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("document"))
                {
                    document = property.Value.GetString();
                    continue;
                }
            }
            return new ValidationResult(id, annotations, passed, ruleSlug, message, document);
        }
    }
}
