// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Affinda.API.Models
{
    /// <summary> The JobDescriptionData. </summary>
    public partial class JobDescriptionData
    {
        /// <summary> Initializes a new instance of JobDescriptionData. </summary>
        internal JobDescriptionData()
        {
            Languages = new ChangeTrackingList<LanguageAnnotationV2>();
            Skills = new ChangeTrackingList<SkillAnnotationV2>();
            Certifications = new ChangeTrackingList<TextAnnotationV2>();
        }

        /// <summary> Initializes a new instance of JobDescriptionData. </summary>
        /// <param name="jobTitle"></param>
        /// <param name="contactEmail"></param>
        /// <param name="contactName"></param>
        /// <param name="contactPhone"></param>
        /// <param name="startDate"></param>
        /// <param name="endDate"></param>
        /// <param name="jobType"></param>
        /// <param name="languages"></param>
        /// <param name="skills"></param>
        /// <param name="organizationName"></param>
        /// <param name="organizationWebsite"></param>
        /// <param name="educationLevel"></param>
        /// <param name="educationAccreditation"></param>
        /// <param name="expectedRemuneration"></param>
        /// <param name="location"></param>
        /// <param name="certifications"></param>
        /// <param name="yearsExperience"></param>
        internal JobDescriptionData(JobTitleAnnotation jobTitle, TextAnnotationV2 contactEmail, TextAnnotationV2 contactName, TextAnnotationV2 contactPhone, DateAnnotation startDate, DateAnnotation endDate, TextAnnotationV2 jobType, IReadOnlyList<LanguageAnnotationV2> languages, IReadOnlyList<SkillAnnotationV2> skills, TextAnnotationV2 organizationName, TextAnnotationV2 organizationWebsite, TextAnnotationV2 educationLevel, TextAnnotationV2 educationAccreditation, ExpectedRemunerationAnnotationV2 expectedRemuneration, LocationAnnotationV2 location, IReadOnlyList<TextAnnotationV2> certifications, YearsExperienceAnnotationV2 yearsExperience)
        {
            JobTitle = jobTitle;
            ContactEmail = contactEmail;
            ContactName = contactName;
            ContactPhone = contactPhone;
            StartDate = startDate;
            EndDate = endDate;
            JobType = jobType;
            Languages = languages;
            Skills = skills;
            OrganizationName = organizationName;
            OrganizationWebsite = organizationWebsite;
            EducationLevel = educationLevel;
            EducationAccreditation = educationAccreditation;
            ExpectedRemuneration = expectedRemuneration;
            Location = location;
            Certifications = certifications;
            YearsExperience = yearsExperience;
        }

        /// <summary> Gets the job title. </summary>
        public JobTitleAnnotation JobTitle { get; }
        /// <summary> Gets the contact email. </summary>
        public TextAnnotationV2 ContactEmail { get; }
        /// <summary> Gets the contact name. </summary>
        public TextAnnotationV2 ContactName { get; }
        /// <summary> Gets the contact phone. </summary>
        public TextAnnotationV2 ContactPhone { get; }
        /// <summary> Gets the start date. </summary>
        public DateAnnotation StartDate { get; }
        /// <summary> Gets the end date. </summary>
        public DateAnnotation EndDate { get; }
        /// <summary> Gets the job type. </summary>
        public TextAnnotationV2 JobType { get; }
        /// <summary> Gets the languages. </summary>
        public IReadOnlyList<LanguageAnnotationV2> Languages { get; }
        /// <summary> Gets the skills. </summary>
        public IReadOnlyList<SkillAnnotationV2> Skills { get; }
        /// <summary> Gets the organization name. </summary>
        public TextAnnotationV2 OrganizationName { get; }
        /// <summary> Gets the organization website. </summary>
        public TextAnnotationV2 OrganizationWebsite { get; }
        /// <summary> Gets the education level. </summary>
        public TextAnnotationV2 EducationLevel { get; }
        /// <summary> Gets the education accreditation. </summary>
        public TextAnnotationV2 EducationAccreditation { get; }
        /// <summary> Gets the expected remuneration. </summary>
        public ExpectedRemunerationAnnotationV2 ExpectedRemuneration { get; }
        /// <summary> Gets the location. </summary>
        public LocationAnnotationV2 Location { get; }
        /// <summary> Gets the certifications. </summary>
        public IReadOnlyList<TextAnnotationV2> Certifications { get; }
        /// <summary> Gets the years experience. </summary>
        public YearsExperienceAnnotationV2 YearsExperience { get; }
    }
}
