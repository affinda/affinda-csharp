// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class JobDescriptionSearchDetailOccupationGroupValue
    {
        internal static JobDescriptionSearchDetailOccupationGroupValue DeserializeJobDescriptionSearchDetailOccupationGroupValue(JsonElement element)
        {
            Optional<bool> match = default;
            int code = default;
            string name = default;
            IReadOnlyList<OccupationGroup> children = default;
            Optional<IReadOnlyList<OccupationGroup>> parents = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("match"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    match = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("code"))
                {
                    code = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("children"))
                {
                    List<OccupationGroup> array = new List<OccupationGroup>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DeserializeOccupationGroup(item));
                    }
                    children = array;
                    continue;
                }
                if (property.NameEquals("parents"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<OccupationGroup> array = new List<OccupationGroup>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(DeserializeOccupationGroup(item));
                    }
                    parents = array;
                    continue;
                }
            }
            return new JobDescriptionSearchDetailOccupationGroupValue(code, name, children, Optional.ToList(parents), Optional.ToNullable(match));
        }
    }
}
