// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Affinda.API.Models
{
    /// <summary> The Workspace. </summary>
    public partial class Workspace
    {
        /// <summary> Initializes a new instance of Workspace. </summary>
        /// <param name="identifier"> Uniquely identify a workspace. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="identifier"/> is null. </exception>
        internal Workspace(string identifier)
        {
            if (identifier == null)
            {
                throw new ArgumentNullException(nameof(identifier));
            }

            Identifier = identifier;
            Collections = new ChangeTrackingList<WorkspaceCollectionsItem>();
            Members = new ChangeTrackingList<User>();
            WhitelistIngestAddresses = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of Workspace. </summary>
        /// <param name="identifier"> Uniquely identify a workspace. </param>
        /// <param name="organization"></param>
        /// <param name="name"></param>
        /// <param name="visibility"> Visibility &quot;organization&quot; means everyone in the organization can access the workspace. Visibility &quot;private&quot; means only people explicitly added can access the workspace. </param>
        /// <param name="collections"></param>
        /// <param name="rejectInvalidDocuments"> If true, the uploaded document will be rejected if it&apos;s of the wrong document type, or if its document type cannot be determined. No credits will be consumed. </param>
        /// <param name="rejectDuplicates"> If &quot;true&quot;, parsing will fail when the uploaded document is duplicate of an existing document, no credits will be consumed. If &quot;false&quot;, will parse the document normally whether its a duplicate or not. If not provided, will fallback to the workspace settings. </param>
        /// <param name="members"></param>
        /// <param name="unvalidatedDocsCount"> Number of unvalidated documents in the workspace. </param>
        /// <param name="confirmedDocsCount"> Number of validated documents in the workspace. </param>
        /// <param name="ingestEmail"> When you send email to this address, any document attached in the body will be uploaded to this workspace. </param>
        /// <param name="whitelistIngestAddresses"> If specified, only emails from these addresses will be ingested for parsing. Wild cards are allowed, e.g. &quot;*@eyefind.info&quot;. </param>
        /// <param name="documentSplitter"> Option &quot;leave&quot; means no document splitting at all. Option &quot;conservative&quot; means we don&apos;t actually split documents the documents, but will add a warning to documents that may require a split. Option &quot;recommended&quot; means we split documents that are highly likely to require a split, and add warnings to documents that might require one. Option &quot;aggressive&quot; means we split all documents that are likely to require a split. </param>
        internal Workspace(string identifier, Organization organization, string name, WorkspaceVisibility? visibility, IReadOnlyList<WorkspaceCollectionsItem> collections, bool? rejectInvalidDocuments, bool? rejectDuplicates, IReadOnlyList<User> members, int? unvalidatedDocsCount, int? confirmedDocsCount, string ingestEmail, IReadOnlyList<string> whitelistIngestAddresses, WorkspaceSplitDocumentsOptions? documentSplitter)
        {
            Identifier = identifier;
            Organization = organization;
            Name = name;
            Visibility = visibility;
            Collections = collections;
            RejectInvalidDocuments = rejectInvalidDocuments;
            RejectDuplicates = rejectDuplicates;
            Members = members;
            UnvalidatedDocsCount = unvalidatedDocsCount;
            ConfirmedDocsCount = confirmedDocsCount;
            IngestEmail = ingestEmail;
            WhitelistIngestAddresses = whitelistIngestAddresses;
            DocumentSplitter = documentSplitter;
        }

        /// <summary> Uniquely identify a workspace. </summary>
        public string Identifier { get; }
        /// <summary> Gets the organization. </summary>
        public Organization Organization { get; }
        /// <summary> Gets the name. </summary>
        public string Name { get; }
        /// <summary> Visibility &quot;organization&quot; means everyone in the organization can access the workspace. Visibility &quot;private&quot; means only people explicitly added can access the workspace. </summary>
        public WorkspaceVisibility? Visibility { get; }
        /// <summary> Gets the collections. </summary>
        public IReadOnlyList<WorkspaceCollectionsItem> Collections { get; }
        /// <summary> If true, the uploaded document will be rejected if it&apos;s of the wrong document type, or if its document type cannot be determined. No credits will be consumed. </summary>
        public bool? RejectInvalidDocuments { get; }
        /// <summary> If &quot;true&quot;, parsing will fail when the uploaded document is duplicate of an existing document, no credits will be consumed. If &quot;false&quot;, will parse the document normally whether its a duplicate or not. If not provided, will fallback to the workspace settings. </summary>
        public bool? RejectDuplicates { get; }
        /// <summary> Gets the members. </summary>
        public IReadOnlyList<User> Members { get; }
        /// <summary> Number of unvalidated documents in the workspace. </summary>
        public int? UnvalidatedDocsCount { get; }
        /// <summary> Number of validated documents in the workspace. </summary>
        public int? ConfirmedDocsCount { get; }
        /// <summary> When you send email to this address, any document attached in the body will be uploaded to this workspace. </summary>
        public string IngestEmail { get; }
        /// <summary> If specified, only emails from these addresses will be ingested for parsing. Wild cards are allowed, e.g. &quot;*@eyefind.info&quot;. </summary>
        public IReadOnlyList<string> WhitelistIngestAddresses { get; }
        /// <summary> Option &quot;leave&quot; means no document splitting at all. Option &quot;conservative&quot; means we don&apos;t actually split documents the documents, but will add a warning to documents that may require a split. Option &quot;recommended&quot; means we split documents that are highly likely to require a split, and add warnings to documents that might require one. Option &quot;aggressive&quot; means we split all documents that are likely to require a split. </summary>
        public WorkspaceSplitDocumentsOptions? DocumentSplitter { get; }
    }
}
