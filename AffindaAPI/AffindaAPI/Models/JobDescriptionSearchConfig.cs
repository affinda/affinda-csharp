// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Affinda.API.Models
{
    /// <summary> The JobDescriptionSearchConfig. </summary>
    public partial class JobDescriptionSearchConfig
    {
        /// <summary> Initializes a new instance of JobDescriptionSearchConfig. </summary>
        public JobDescriptionSearchConfig()
        {
            Indices = new ChangeTrackingList<string>();
            SearchToolTheme = new ChangeTrackingDictionary<string, object>();
            Actions = new ChangeTrackingList<SearchConfigAction>();
            CustomFieldsConfig = new ChangeTrackingList<CustomFieldConfig>();
        }

        /// <summary> Initializes a new instance of JobDescriptionSearchConfig. </summary>
        /// <param name="allowPdfDownload"></param>
        /// <param name="maxResults"> Maximum number of results that can be returned. Setting to &quot;null&quot; means no limitation. </param>
        /// <param name="displayJobTitle"></param>
        /// <param name="displayLocation"></param>
        /// <param name="displayYearsExperience"></param>
        /// <param name="displayOccupationGroup"></param>
        /// <param name="displayEducation"></param>
        /// <param name="displaySkills"></param>
        /// <param name="displayLanguages"></param>
        /// <param name="displayManagementLevel"></param>
        /// <param name="displayKeywords"></param>
        /// <param name="weightJobTitle"></param>
        /// <param name="weightLocation"></param>
        /// <param name="weightYearsExperience"></param>
        /// <param name="weightOccupationGroup"></param>
        /// <param name="weightEducation"></param>
        /// <param name="weightSkills"></param>
        /// <param name="weightLanguages"></param>
        /// <param name="weightManagementLevel"></param>
        /// <param name="weightKeywords"></param>
        /// <param name="indices"> List of index names. </param>
        /// <param name="showIndexDropdown"> Controls whether or not the index dropdown is displayed to the user. </param>
        /// <param name="searchToolTheme"> Customize the theme of the embeded search tool. </param>
        /// <param name="userId"> ID of the logged in user. </param>
        /// <param name="username"> Username of the logged in user. </param>
        /// <param name="actions"> A list of actions to show in the dropdown in the embedded search tool. </param>
        /// <param name="hideToolbar"> Hide the reset/import toolbar. </param>
        /// <param name="customFieldsConfig"></param>
        internal JobDescriptionSearchConfig(bool? allowPdfDownload, int? maxResults, bool? displayJobTitle, bool? displayLocation, bool? displayYearsExperience, bool? displayOccupationGroup, bool? displayEducation, bool? displaySkills, bool? displayLanguages, bool? displayManagementLevel, bool? displayKeywords, float? weightJobTitle, float? weightLocation, float? weightYearsExperience, float? weightOccupationGroup, float? weightEducation, float? weightSkills, float? weightLanguages, float? weightManagementLevel, float? weightKeywords, IList<string> indices, bool? showIndexDropdown, IDictionary<string, object> searchToolTheme, int? userId, string username, IList<SearchConfigAction> actions, bool? hideToolbar, IList<CustomFieldConfig> customFieldsConfig)
        {
            AllowPdfDownload = allowPdfDownload;
            MaxResults = maxResults;
            DisplayJobTitle = displayJobTitle;
            DisplayLocation = displayLocation;
            DisplayYearsExperience = displayYearsExperience;
            DisplayOccupationGroup = displayOccupationGroup;
            DisplayEducation = displayEducation;
            DisplaySkills = displaySkills;
            DisplayLanguages = displayLanguages;
            DisplayManagementLevel = displayManagementLevel;
            DisplayKeywords = displayKeywords;
            WeightJobTitle = weightJobTitle;
            WeightLocation = weightLocation;
            WeightYearsExperience = weightYearsExperience;
            WeightOccupationGroup = weightOccupationGroup;
            WeightEducation = weightEducation;
            WeightSkills = weightSkills;
            WeightLanguages = weightLanguages;
            WeightManagementLevel = weightManagementLevel;
            WeightKeywords = weightKeywords;
            Indices = indices;
            ShowIndexDropdown = showIndexDropdown;
            SearchToolTheme = searchToolTheme;
            UserId = userId;
            Username = username;
            Actions = actions;
            HideToolbar = hideToolbar;
            CustomFieldsConfig = customFieldsConfig;
        }

        /// <summary> Gets or sets the allow pdf download. </summary>
        public bool? AllowPdfDownload { get; set; }
        /// <summary> Maximum number of results that can be returned. Setting to &quot;null&quot; means no limitation. </summary>
        public int? MaxResults { get; set; }
        /// <summary> Gets or sets the display job title. </summary>
        public bool? DisplayJobTitle { get; set; }
        /// <summary> Gets or sets the display location. </summary>
        public bool? DisplayLocation { get; set; }
        /// <summary> Gets or sets the display years experience. </summary>
        public bool? DisplayYearsExperience { get; set; }
        /// <summary> Gets or sets the display occupation group. </summary>
        public bool? DisplayOccupationGroup { get; set; }
        /// <summary> Gets or sets the display education. </summary>
        public bool? DisplayEducation { get; set; }
        /// <summary> Gets or sets the display skills. </summary>
        public bool? DisplaySkills { get; set; }
        /// <summary> Gets or sets the display languages. </summary>
        public bool? DisplayLanguages { get; set; }
        /// <summary> Gets or sets the display management level. </summary>
        public bool? DisplayManagementLevel { get; set; }
        /// <summary> Gets or sets the display keywords. </summary>
        public bool? DisplayKeywords { get; set; }
        /// <summary> Gets or sets the weight job title. </summary>
        public float? WeightJobTitle { get; set; }
        /// <summary> Gets or sets the weight location. </summary>
        public float? WeightLocation { get; set; }
        /// <summary> Gets or sets the weight years experience. </summary>
        public float? WeightYearsExperience { get; set; }
        /// <summary> Gets or sets the weight occupation group. </summary>
        public float? WeightOccupationGroup { get; set; }
        /// <summary> Gets or sets the weight education. </summary>
        public float? WeightEducation { get; set; }
        /// <summary> Gets or sets the weight skills. </summary>
        public float? WeightSkills { get; set; }
        /// <summary> Gets or sets the weight languages. </summary>
        public float? WeightLanguages { get; set; }
        /// <summary> Gets or sets the weight management level. </summary>
        public float? WeightManagementLevel { get; set; }
        /// <summary> Gets or sets the weight keywords. </summary>
        public float? WeightKeywords { get; set; }
        /// <summary> List of index names. </summary>
        public IList<string> Indices { get; }
        /// <summary> Controls whether or not the index dropdown is displayed to the user. </summary>
        public bool? ShowIndexDropdown { get; set; }
        /// <summary> Customize the theme of the embeded search tool. </summary>
        public IDictionary<string, object> SearchToolTheme { get; set; }
        /// <summary> ID of the logged in user. </summary>
        public int? UserId { get; }
        /// <summary> Username of the logged in user. </summary>
        public string Username { get; }
        /// <summary> A list of actions to show in the dropdown in the embedded search tool. </summary>
        public IList<SearchConfigAction> Actions { get; set; }
        /// <summary> Hide the reset/import toolbar. </summary>
        public bool? HideToolbar { get; set; }
        /// <summary> Gets or sets the custom fields config. </summary>
        public IList<CustomFieldConfig> CustomFieldsConfig { get; set; }
    }
}
