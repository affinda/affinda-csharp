// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Affinda.API.Models
{
    /// <summary> The AnnotationCreate. </summary>
    public partial class AnnotationCreate
    {
        /// <summary> Initializes a new instance of AnnotationCreate. </summary>
        /// <param name="document"> Unique identifier for the document. </param>
        /// <param name="pageIndex"> The page number within the document, starting from 0. </param>
        /// <param name="dataPoint"> Data point&apos;s identifier. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="document"/> or <paramref name="dataPoint"/> is null. </exception>
        public AnnotationCreate(string document, int? pageIndex, string dataPoint)
        {
            if (document == null)
            {
                throw new ArgumentNullException(nameof(document));
            }
            if (dataPoint == null)
            {
                throw new ArgumentNullException(nameof(dataPoint));
            }

            Rectangles = new ChangeTrackingList<Rectangle>();
            Document = document;
            PageIndex = pageIndex;
            DataPoint = dataPoint;
            ValidationResults = new ChangeTrackingList<ChangedValidationResults>();
        }

        /// <summary> x/y coordinates for the rectangles containing the data. An annotation can be contained within multiple rectangles. </summary>
        public IList<Rectangle> Rectangles { get; }
        /// <summary> Unique identifier for the document. </summary>
        public string Document { get; }
        /// <summary> The page number within the document, starting from 0. </summary>
        public int? PageIndex { get; }
        /// <summary> Data point&apos;s identifier. </summary>
        public string DataPoint { get; }
        /// <summary> Raw data extracted from the before any post-processing. </summary>
        public string Raw { get; set; }
        /// <summary> Anything. </summary>
        public object Parsed { get; set; }
        /// <summary> Indicates whether the data has been validated by a human. </summary>
        public bool? IsClientVerified { get; set; }
        /// <summary> The parent annotation&apos;s ID. </summary>
        public int? Parent { get; set; }
        /// <summary> The validation results created, changed or deleted as a result of creating the annotation. </summary>
        public IList<ChangedValidationResults> ValidationResults { get; }
    }
}
