// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class ResumeSearchParametersLocation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(Coordinates))
            {
                writer.WritePropertyName("coordinates");
                writer.WriteObjectValue(Coordinates);
            }
            if (Optional.IsDefined(Distance))
            {
                writer.WritePropertyName("distance");
                writer.WriteNumberValue(Distance.Value);
            }
            if (Optional.IsDefined(Unit))
            {
                writer.WritePropertyName("unit");
                writer.WriteStringValue(Unit.Value.ToSerialString());
            }
            writer.WriteEndObject();
        }

        internal static ResumeSearchParametersLocation DeserializeResumeSearchParametersLocation(JsonElement element)
        {
            Optional<string> name = default;
            Optional<ResumeSearchParametersLocationCoordinates> coordinates = default;
            Optional<int> distance = default;
            Optional<SearchLocationUnit> unit = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("coordinates"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    coordinates = ResumeSearchParametersLocationCoordinates.DeserializeResumeSearchParametersLocationCoordinates(property.Value);
                    continue;
                }
                if (property.NameEquals("distance"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    distance = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("unit"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    unit = property.Value.GetString().ToSearchLocationUnit();
                    continue;
                }
            }
            return new ResumeSearchParametersLocation(name.Value, coordinates.Value, Optional.ToNullable(distance), Optional.ToNullable(unit));
        }
    }
}
