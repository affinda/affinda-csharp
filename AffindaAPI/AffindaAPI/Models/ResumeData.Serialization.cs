// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class ResumeData
    {
        internal static ResumeData DeserializeResumeData(JsonElement element)
        {
            Optional<ResumeDataName> name = default;
            Optional<IReadOnlyList<string>> phoneNumbers = default;
            Optional<IReadOnlyList<string>> websites = default;
            Optional<IReadOnlyList<string>> emails = default;
            Optional<string> dateOfBirth = default;
            Optional<Location> location = default;
            Optional<string> objective = default;
            Optional<IReadOnlyList<string>> languages = default;
            Optional<string> summary = default;
            Optional<int> totalYearsExperience = default;
            Optional<byte[]> headShot = default;
            Optional<IReadOnlyList<ResumeDataEducationItem>> education = default;
            Optional<string> profession = default;
            Optional<string> linkedin = default;
            Optional<IReadOnlyList<ResumeDataWorkExperienceItem>> workExperience = default;
            Optional<IReadOnlyList<ResumeDataSkillsItem>> skills = default;
            Optional<IReadOnlyList<string>> certifications = default;
            Optional<IReadOnlyList<string>> publications = default;
            Optional<IReadOnlyList<ResumeDataRefereesItem>> referees = default;
            Optional<IReadOnlyList<ResumeDataSectionsItem>> sections = default;
            Optional<int> isResumeProbability = default;
            Optional<string> rawText = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        name = null;
                        continue;
                    }
                    name = ResumeDataName.DeserializeResumeDataName(property.Value);
                    continue;
                }
                if (property.NameEquals("phoneNumbers"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    phoneNumbers = array;
                    continue;
                }
                if (property.NameEquals("websites"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    websites = array;
                    continue;
                }
                if (property.NameEquals("emails"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    emails = array;
                    continue;
                }
                if (property.NameEquals("dateOfBirth"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        dateOfBirth = null;
                        continue;
                    }
                    dateOfBirth = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("location"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        location = null;
                        continue;
                    }
                    location = Location.DeserializeLocation(property.Value);
                    continue;
                }
                if (property.NameEquals("objective"))
                {
                    objective = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("languages"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    languages = array;
                    continue;
                }
                if (property.NameEquals("summary"))
                {
                    summary = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("totalYearsExperience"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    totalYearsExperience = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("headShot"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        headShot = null;
                        continue;
                    }
                    headShot = property.Value.GetBytesFromBase64("D");
                    continue;
                }
                if (property.NameEquals("education"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ResumeDataEducationItem> array = new List<ResumeDataEducationItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ResumeDataEducationItem.DeserializeResumeDataEducationItem(item));
                    }
                    education = array;
                    continue;
                }
                if (property.NameEquals("profession"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        profession = null;
                        continue;
                    }
                    profession = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("linkedin"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        linkedin = null;
                        continue;
                    }
                    linkedin = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("workExperience"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ResumeDataWorkExperienceItem> array = new List<ResumeDataWorkExperienceItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ResumeDataWorkExperienceItem.DeserializeResumeDataWorkExperienceItem(item));
                    }
                    workExperience = array;
                    continue;
                }
                if (property.NameEquals("skills"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ResumeDataSkillsItem> array = new List<ResumeDataSkillsItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ResumeDataSkillsItem.DeserializeResumeDataSkillsItem(item));
                    }
                    skills = array;
                    continue;
                }
                if (property.NameEquals("certifications"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    certifications = array;
                    continue;
                }
                if (property.NameEquals("publications"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    publications = array;
                    continue;
                }
                if (property.NameEquals("referees"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ResumeDataRefereesItem> array = new List<ResumeDataRefereesItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ResumeDataRefereesItem.DeserializeResumeDataRefereesItem(item));
                    }
                    referees = array;
                    continue;
                }
                if (property.NameEquals("sections"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ResumeDataSectionsItem> array = new List<ResumeDataSectionsItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ResumeDataSectionsItem.DeserializeResumeDataSectionsItem(item));
                    }
                    sections = array;
                    continue;
                }
                if (property.NameEquals("isResumeProbability"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    isResumeProbability = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("rawText"))
                {
                    rawText = property.Value.GetString();
                    continue;
                }
            }
            return new ResumeData(name.Value, Optional.ToList(phoneNumbers), Optional.ToList(websites), Optional.ToList(emails), dateOfBirth.Value, location.Value, objective.Value, Optional.ToList(languages), summary.Value, Optional.ToNullable(totalYearsExperience), headShot.Value, Optional.ToList(education), profession.Value, linkedin.Value, Optional.ToList(workExperience), Optional.ToList(skills), Optional.ToList(certifications), Optional.ToList(publications), Optional.ToList(referees), Optional.ToList(sections), Optional.ToNullable(isResumeProbability), rawText.Value);
        }
    }
}
