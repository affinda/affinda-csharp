// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class RegionBias : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Country))
            {
                if (Country != null)
                {
                    writer.WritePropertyName("country");
                    writer.WriteStringValue(Country);
                }
                else
                {
                    writer.WriteNull("country");
                }
            }
            if (Optional.IsCollectionDefined(Countries))
            {
                if (Countries != null)
                {
                    writer.WritePropertyName("countries");
                    writer.WriteStartArray();
                    foreach (var item in Countries)
                    {
                        writer.WriteStringValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("countries");
                }
            }
            if (Optional.IsCollectionDefined(SquareCoordinates))
            {
                if (SquareCoordinates != null)
                {
                    writer.WritePropertyName("squareCoordinates");
                    writer.WriteStartArray();
                    foreach (var item in SquareCoordinates)
                    {
                        writer.WriteNumberValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("squareCoordinates");
                }
            }
            writer.WriteEndObject();
        }

        internal static RegionBias DeserializeRegionBias(JsonElement element)
        {
            Optional<string> country = default;
            Optional<IList<string>> countries = default;
            Optional<IList<float>> squareCoordinates = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("country"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        country = null;
                        continue;
                    }
                    country = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("countries"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        countries = null;
                        continue;
                    }
                    List<string> array = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString());
                    }
                    countries = array;
                    continue;
                }
                if (property.NameEquals("squareCoordinates"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        squareCoordinates = null;
                        continue;
                    }
                    List<float> array = new List<float>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetSingle());
                    }
                    squareCoordinates = array;
                    continue;
                }
            }
            return new RegionBias(country.Value, Optional.ToList(countries), Optional.ToList(squareCoordinates));
        }
    }
}
