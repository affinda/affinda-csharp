// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Affinda.API.Models
{
    /// <summary> The ResumeSearchResult. </summary>
    public partial class ResumeSearchResult
    {
        /// <summary> Initializes a new instance of ResumeSearchResult. </summary>
        /// <param name="identifier"> Unique identifier for the document. If creating a document and left blank, one will be automatically generated. </param>
        /// <param name="score"></param>
        /// <param name="pdf"></param>
        /// <param name="jobTitle"></param>
        /// <param name="managementLevel"></param>
        /// <param name="experience"></param>
        /// <param name="skills"></param>
        /// <param name="languages"></param>
        /// <param name="location"></param>
        /// <param name="education"></param>
        /// <param name="occupationGroup"></param>
        /// <param name="searchExpression"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="pdf"/>, <paramref name="jobTitle"/>, <paramref name="managementLevel"/>, <paramref name="experience"/>, <paramref name="skills"/>, <paramref name="languages"/>, <paramref name="location"/>, <paramref name="education"/>, <paramref name="occupationGroup"/> or <paramref name="searchExpression"/> is null. </exception>
        internal ResumeSearchResult(string identifier, float score, string pdf, ResumeSearchScoreComponent jobTitle, ResumeSearchScoreComponent managementLevel, ResumeSearchScoreComponent experience, ResumeSearchScoreComponent skills, ResumeSearchScoreComponent languages, ResumeSearchScoreComponent location, ResumeSearchScoreComponent education, ResumeSearchScoreComponent occupationGroup, ResumeSearchScoreComponent searchExpression)
        {
            if (pdf == null)
            {
                throw new ArgumentNullException(nameof(pdf));
            }
            if (jobTitle == null)
            {
                throw new ArgumentNullException(nameof(jobTitle));
            }
            if (managementLevel == null)
            {
                throw new ArgumentNullException(nameof(managementLevel));
            }
            if (experience == null)
            {
                throw new ArgumentNullException(nameof(experience));
            }
            if (skills == null)
            {
                throw new ArgumentNullException(nameof(skills));
            }
            if (languages == null)
            {
                throw new ArgumentNullException(nameof(languages));
            }
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }
            if (education == null)
            {
                throw new ArgumentNullException(nameof(education));
            }
            if (occupationGroup == null)
            {
                throw new ArgumentNullException(nameof(occupationGroup));
            }
            if (searchExpression == null)
            {
                throw new ArgumentNullException(nameof(searchExpression));
            }

            Identifier = identifier;
            Score = score;
            Pdf = pdf;
            JobTitle = jobTitle;
            ManagementLevel = managementLevel;
            Experience = experience;
            Skills = skills;
            Languages = languages;
            Location = location;
            Education = education;
            OccupationGroup = occupationGroup;
            SearchExpression = searchExpression;
        }

        /// <summary> Initializes a new instance of ResumeSearchResult. </summary>
        /// <param name="identifier"> Unique identifier for the document. If creating a document and left blank, one will be automatically generated. </param>
        /// <param name="score"></param>
        /// <param name="pdf"></param>
        /// <param name="name"></param>
        /// <param name="jobTitle"></param>
        /// <param name="managementLevel"></param>
        /// <param name="experience"></param>
        /// <param name="skills"></param>
        /// <param name="languages"></param>
        /// <param name="location"></param>
        /// <param name="education"></param>
        /// <param name="occupationGroup"></param>
        /// <param name="searchExpression"></param>
        internal ResumeSearchResult(string identifier, float score, string pdf, string name, ResumeSearchScoreComponent jobTitle, ResumeSearchScoreComponent managementLevel, ResumeSearchScoreComponent experience, ResumeSearchScoreComponent skills, ResumeSearchScoreComponent languages, ResumeSearchScoreComponent location, ResumeSearchScoreComponent education, ResumeSearchScoreComponent occupationGroup, ResumeSearchScoreComponent searchExpression)
        {
            Identifier = identifier;
            Score = score;
            Pdf = pdf;
            Name = name;
            JobTitle = jobTitle;
            ManagementLevel = managementLevel;
            Experience = experience;
            Skills = skills;
            Languages = languages;
            Location = location;
            Education = education;
            OccupationGroup = occupationGroup;
            SearchExpression = searchExpression;
        }

        /// <summary> Unique identifier for the document. If creating a document and left blank, one will be automatically generated. </summary>
        public string Identifier { get; }
        /// <summary> Gets the score. </summary>
        public float Score { get; }
        /// <summary> Gets the pdf. </summary>
        public string Pdf { get; }
        /// <summary> Gets the name. </summary>
        public string Name { get; }
        /// <summary> Gets the job title. </summary>
        public ResumeSearchScoreComponent JobTitle { get; }
        /// <summary> Gets the management level. </summary>
        public ResumeSearchScoreComponent ManagementLevel { get; }
        /// <summary> Gets the experience. </summary>
        public ResumeSearchScoreComponent Experience { get; }
        /// <summary> Gets the skills. </summary>
        public ResumeSearchScoreComponent Skills { get; }
        /// <summary> Gets the languages. </summary>
        public ResumeSearchScoreComponent Languages { get; }
        /// <summary> Gets the location. </summary>
        public ResumeSearchScoreComponent Location { get; }
        /// <summary> Gets the education. </summary>
        public ResumeSearchScoreComponent Education { get; }
        /// <summary> Gets the occupation group. </summary>
        public ResumeSearchScoreComponent OccupationGroup { get; }
        /// <summary> Gets the search expression. </summary>
        public ResumeSearchScoreComponent SearchExpression { get; }
    }
}
