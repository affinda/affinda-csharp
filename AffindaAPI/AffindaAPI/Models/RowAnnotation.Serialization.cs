// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class RowAnnotation : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Code))
            {
                if (Code != null)
                {
                    writer.WritePropertyName("code");
                    writer.WriteStringValue(Code);
                }
                else
                {
                    writer.WriteNull("code");
                }
            }
            if (Optional.IsDefined(Date))
            {
                if (Date != null)
                {
                    writer.WritePropertyName("date");
                    writer.WriteStringValue(Date);
                }
                else
                {
                    writer.WriteNull("date");
                }
            }
            if (Optional.IsDefined(Description))
            {
                if (Description != null)
                {
                    writer.WritePropertyName("description");
                    writer.WriteStringValue(Description);
                }
                else
                {
                    writer.WriteNull("description");
                }
            }
            if (Optional.IsDefined(Unit))
            {
                if (Unit != null)
                {
                    writer.WritePropertyName("unit");
                    writer.WriteStringValue(Unit);
                }
                else
                {
                    writer.WriteNull("unit");
                }
            }
            if (Optional.IsDefined(UnitPrice))
            {
                if (UnitPrice != null)
                {
                    writer.WritePropertyName("unitPrice");
                    writer.WriteNumberValue(UnitPrice.Value);
                }
                else
                {
                    writer.WriteNull("unitPrice");
                }
            }
            if (Optional.IsDefined(Quantity))
            {
                if (Quantity != null)
                {
                    writer.WritePropertyName("quantity");
                    writer.WriteNumberValue(Quantity.Value);
                }
                else
                {
                    writer.WriteNull("quantity");
                }
            }
            if (Optional.IsDefined(Discount))
            {
                if (Discount != null)
                {
                    writer.WritePropertyName("discount");
                    writer.WriteStringValue(Discount);
                }
                else
                {
                    writer.WriteNull("discount");
                }
            }
            if (Optional.IsDefined(BaseTotal))
            {
                if (BaseTotal != null)
                {
                    writer.WritePropertyName("baseTotal");
                    writer.WriteNumberValue(BaseTotal.Value);
                }
                else
                {
                    writer.WriteNull("baseTotal");
                }
            }
            if (Optional.IsDefined(TaxRate))
            {
                if (TaxRate != null)
                {
                    writer.WritePropertyName("taxRate");
                    writer.WriteStringValue(TaxRate);
                }
                else
                {
                    writer.WriteNull("taxRate");
                }
            }
            if (Optional.IsDefined(TaxTotal))
            {
                if (TaxTotal != null)
                {
                    writer.WritePropertyName("taxTotal");
                    writer.WriteNumberValue(TaxTotal.Value);
                }
                else
                {
                    writer.WriteNull("taxTotal");
                }
            }
            if (Optional.IsDefined(Total))
            {
                if (Total != null)
                {
                    writer.WritePropertyName("total");
                    writer.WriteNumberValue(Total.Value);
                }
                else
                {
                    writer.WriteNull("total");
                }
            }
            if (Optional.IsDefined(Other))
            {
                if (Other != null)
                {
                    writer.WritePropertyName("other");
                    writer.WriteStringValue(Other);
                }
                else
                {
                    writer.WriteNull("other");
                }
            }
            if (Optional.IsCollectionDefined(CustomFields))
            {
                writer.WritePropertyName("customFields");
                writer.WriteStartObject();
                foreach (var item in CustomFields)
                {
                    writer.WritePropertyName(item.Key);
                    writer.WriteObjectValue(item.Value);
                }
                writer.WriteEndObject();
            }
            writer.WriteEndObject();
        }

        internal static RowAnnotation DeserializeRowAnnotation(JsonElement element)
        {
            Optional<string> code = default;
            Optional<string> date = default;
            Optional<string> description = default;
            Optional<string> unit = default;
            Optional<float?> unitPrice = default;
            Optional<float?> quantity = default;
            Optional<string> discount = default;
            Optional<float?> baseTotal = default;
            Optional<string> taxRate = default;
            Optional<float?> taxTotal = default;
            Optional<float?> total = default;
            Optional<string> other = default;
            Optional<IDictionary<string, object>> customFields = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("code"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        code = null;
                        continue;
                    }
                    code = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("date"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        date = null;
                        continue;
                    }
                    date = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("description"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        description = null;
                        continue;
                    }
                    description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("unit"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        unit = null;
                        continue;
                    }
                    unit = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("unitPrice"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        unitPrice = null;
                        continue;
                    }
                    unitPrice = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("quantity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        quantity = null;
                        continue;
                    }
                    quantity = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("discount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        discount = null;
                        continue;
                    }
                    discount = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("baseTotal"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        baseTotal = null;
                        continue;
                    }
                    baseTotal = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("taxRate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        taxRate = null;
                        continue;
                    }
                    taxRate = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("taxTotal"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        taxTotal = null;
                        continue;
                    }
                    taxTotal = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("total"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        total = null;
                        continue;
                    }
                    total = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("other"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        other = null;
                        continue;
                    }
                    other = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("customFields"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    Dictionary<string, object> dictionary = new Dictionary<string, object>();
                    foreach (var property0 in property.Value.EnumerateObject())
                    {
                        dictionary.Add(property0.Name, property0.Value.GetObject());
                    }
                    customFields = dictionary;
                    continue;
                }
            }
            return new RowAnnotation(code.Value, date.Value, description.Value, unit.Value, Optional.ToNullable(unitPrice), Optional.ToNullable(quantity), discount.Value, Optional.ToNullable(baseTotal), taxRate.Value, Optional.ToNullable(taxTotal), Optional.ToNullable(total), other.Value, Optional.ToDictionary(customFields));
        }
    }
}
