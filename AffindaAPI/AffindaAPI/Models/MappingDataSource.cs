// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Affinda.API.Models
{
    /// <summary> A mapping data source is used to map from raw data found by our AI models to records in your database. </summary>
    public partial class MappingDataSource
    {
        /// <summary> Initializes a new instance of MappingDataSource. </summary>
        /// <param name="identifier"> Uniquely identify a mapping data source. </param>
        /// <param name="keyProperty"> Attribute in the schema which uniquely identifiers the value. </param>
        /// <param name="displayProperty"> Attribute in the schema which is used to display the value. </param>
        /// <param name="organization"> The organization that this mapping data source belongs to. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="identifier"/>, <paramref name="keyProperty"/> or <paramref name="displayProperty"/> is null. </exception>
        internal MappingDataSource(string identifier, string keyProperty, string displayProperty, string organization)
        {
            if (identifier == null)
            {
                throw new ArgumentNullException(nameof(identifier));
            }
            if (keyProperty == null)
            {
                throw new ArgumentNullException(nameof(keyProperty));
            }
            if (displayProperty == null)
            {
                throw new ArgumentNullException(nameof(displayProperty));
            }

            Identifier = identifier;
            KeyProperty = keyProperty;
            DisplayProperty = displayProperty;
            Organization = organization;
        }

        /// <summary> Initializes a new instance of MappingDataSource. </summary>
        /// <param name="identifier"> Uniquely identify a mapping data source. </param>
        /// <param name="name"></param>
        /// <param name="keyProperty"> Attribute in the schema which uniquely identifiers the value. </param>
        /// <param name="displayProperty"> Attribute in the schema which is used to display the value. </param>
        /// <param name="organization"> The organization that this mapping data source belongs to. </param>
        /// <param name="schema"> The schema of the mapping data source. </param>
        internal MappingDataSource(string identifier, string name, string keyProperty, string displayProperty, string organization, object schema)
        {
            Identifier = identifier;
            Name = name;
            KeyProperty = keyProperty;
            DisplayProperty = displayProperty;
            Organization = organization;
            Schema = schema;
        }

        /// <summary> Uniquely identify a mapping data source. </summary>
        public string Identifier { get; }
        /// <summary> Gets the name. </summary>
        public string Name { get; }
        /// <summary> Attribute in the schema which uniquely identifiers the value. </summary>
        public string KeyProperty { get; }
        /// <summary> Attribute in the schema which is used to display the value. </summary>
        public string DisplayProperty { get; }
        /// <summary> The organization that this mapping data source belongs to. </summary>
        public string Organization { get; }
        /// <summary> The schema of the mapping data source. </summary>
        public object Schema { get; }
    }
}
