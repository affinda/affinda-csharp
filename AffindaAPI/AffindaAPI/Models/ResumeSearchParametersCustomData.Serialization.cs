// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class ResumeSearchParametersCustomData : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("filterType");
            writer.WriteStringValue(FilterType);
            writer.WritePropertyName("dataPoint");
            writer.WriteStringValue(DataPoint);
            writer.WritePropertyName("query");
            writer.WriteObjectValue(Query);
            if (Optional.IsDefined(Required))
            {
                writer.WritePropertyName("required");
                writer.WriteBooleanValue(Required.Value);
            }
            if (Optional.IsDefined(Weight))
            {
                writer.WritePropertyName("weight");
                writer.WriteNumberValue(Weight.Value);
            }
            writer.WriteEndObject();
        }

        internal static ResumeSearchParametersCustomData DeserializeResumeSearchParametersCustomData(JsonElement element)
        {
            string filterType = default;
            string dataPoint = default;
            object query = default;
            Optional<bool> required = default;
            Optional<float> weight = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("filterType"))
                {
                    filterType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("dataPoint"))
                {
                    dataPoint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("query"))
                {
                    query = property.Value.GetObject();
                    continue;
                }
                if (property.NameEquals("required"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    required = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("weight"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    weight = property.Value.GetSingle();
                    continue;
                }
            }
            return new ResumeSearchParametersCustomData(filterType, dataPoint, query, Optional.ToNullable(required), Optional.ToNullable(weight));
        }
    }
}
