// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace Affinda.API.Models
{
    /// <summary> The Paths9K2ZxlV3UsersGetResponses200ContentApplicationJsonSchema. </summary>
    public partial class Paths9K2ZxlV3UsersGetResponses200ContentApplicationJsonSchema
    {
        /// <summary> Initializes a new instance of Paths9K2ZxlV3UsersGetResponses200ContentApplicationJsonSchema. </summary>
        internal Paths9K2ZxlV3UsersGetResponses200ContentApplicationJsonSchema()
        {
            Results = new ChangeTrackingList<User>();
        }

        /// <summary> Initializes a new instance of Paths9K2ZxlV3UsersGetResponses200ContentApplicationJsonSchema. </summary>
        /// <param name="count"> Number of indexes in result. </param>
        /// <param name="next"> URL to request next page of results. </param>
        /// <param name="previous"> URL to request previous page of results. </param>
        /// <param name="results"></param>
        internal Paths9K2ZxlV3UsersGetResponses200ContentApplicationJsonSchema(int? count, string next, string previous, IReadOnlyList<User> results)
        {
            Count = count;
            Next = next;
            Previous = previous;
            Results = results;
        }

        /// <summary> Number of indexes in result. </summary>
        public int? Count { get; }
        /// <summary> URL to request next page of results. </summary>
        public string Next { get; }
        /// <summary> URL to request previous page of results. </summary>
        public string Previous { get; }
        /// <summary> Gets the results. </summary>
        public IReadOnlyList<User> Results { get; }
    }
}
