// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Affinda.API.Models
{
    /// <summary> A validation rule for a collection. </summary>
    public partial class ValidationRule
    {
        /// <summary> Initializes a new instance of ValidationRule. </summary>
        /// <param name="slug"> The slug of the validation rule, in lowercase snake_case. </param>
        /// <param name="dataPoints"> The data point identifier that this validation rule applies to, can be an empty list if the rule doens&apos;t use any data points as sources. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="slug"/> or <paramref name="dataPoints"/> is null. </exception>
        public ValidationRule(string slug, IEnumerable<string> dataPoints)
        {
            if (slug == null)
            {
                throw new ArgumentNullException(nameof(slug));
            }
            if (dataPoints == null)
            {
                throw new ArgumentNullException(nameof(dataPoints));
            }

            Slug = slug;
            DataPoints = dataPoints.ToList();
        }

        /// <summary> Initializes a new instance of ValidationRule. </summary>
        /// <param name="slug"> The slug of the validation rule, in lowercase snake_case. </param>
        /// <param name="dataPoints"> The data point identifier that this validation rule applies to, can be an empty list if the rule doens&apos;t use any data points as sources. </param>
        internal ValidationRule(string slug, IList<string> dataPoints)
        {
            Slug = slug;
            DataPoints = dataPoints;
        }

        /// <summary> The slug of the validation rule, in lowercase snake_case. </summary>
        public string Slug { get; set; }
        /// <summary> The data point identifier that this validation rule applies to, can be an empty list if the rule doens&apos;t use any data points as sources. </summary>
        public IList<string> DataPoints { get; }
    }
}
