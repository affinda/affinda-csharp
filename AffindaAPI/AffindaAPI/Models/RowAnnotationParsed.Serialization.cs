// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class RowAnnotationParsed : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(ItemCode))
            {
                if (ItemCode != null)
                {
                    writer.WritePropertyName("itemCode");
                    writer.WriteObjectValue(ItemCode);
                }
                else
                {
                    writer.WriteNull("itemCode");
                }
            }
            if (Optional.IsDefined(ItemDate))
            {
                if (ItemDate != null)
                {
                    writer.WritePropertyName("itemDate");
                    writer.WriteObjectValue(ItemDate);
                }
                else
                {
                    writer.WriteNull("itemDate");
                }
            }
            if (Optional.IsDefined(ItemDescription))
            {
                if (ItemDescription != null)
                {
                    writer.WritePropertyName("itemDescription");
                    writer.WriteObjectValue(ItemDescription);
                }
                else
                {
                    writer.WriteNull("itemDescription");
                }
            }
            if (Optional.IsDefined(ItemUnit))
            {
                if (ItemUnit != null)
                {
                    writer.WritePropertyName("itemUnit");
                    writer.WriteObjectValue(ItemUnit);
                }
                else
                {
                    writer.WriteNull("itemUnit");
                }
            }
            if (Optional.IsDefined(ItemUnitPrice))
            {
                if (ItemUnitPrice != null)
                {
                    writer.WritePropertyName("itemUnitPrice");
                    writer.WriteObjectValue(ItemUnitPrice);
                }
                else
                {
                    writer.WriteNull("itemUnitPrice");
                }
            }
            if (Optional.IsDefined(ItemQuantity))
            {
                if (ItemQuantity != null)
                {
                    writer.WritePropertyName("itemQuantity");
                    writer.WriteObjectValue(ItemQuantity);
                }
                else
                {
                    writer.WriteNull("itemQuantity");
                }
            }
            if (Optional.IsDefined(ItemDiscount))
            {
                if (ItemDiscount != null)
                {
                    writer.WritePropertyName("itemDiscount");
                    writer.WriteObjectValue(ItemDiscount);
                }
                else
                {
                    writer.WriteNull("itemDiscount");
                }
            }
            if (Optional.IsDefined(ItemBaseTotal))
            {
                if (ItemBaseTotal != null)
                {
                    writer.WritePropertyName("itemBaseTotal");
                    writer.WriteObjectValue(ItemBaseTotal);
                }
                else
                {
                    writer.WriteNull("itemBaseTotal");
                }
            }
            if (Optional.IsDefined(ItemTaxRate))
            {
                if (ItemTaxRate != null)
                {
                    writer.WritePropertyName("itemTaxRate");
                    writer.WriteObjectValue(ItemTaxRate);
                }
                else
                {
                    writer.WriteNull("itemTaxRate");
                }
            }
            if (Optional.IsDefined(ItemTaxTotal))
            {
                if (ItemTaxTotal != null)
                {
                    writer.WritePropertyName("itemTaxTotal");
                    writer.WriteObjectValue(ItemTaxTotal);
                }
                else
                {
                    writer.WriteNull("itemTaxTotal");
                }
            }
            if (Optional.IsDefined(ItemTotal))
            {
                if (ItemTotal != null)
                {
                    writer.WritePropertyName("itemTotal");
                    writer.WriteObjectValue(ItemTotal);
                }
                else
                {
                    writer.WriteNull("itemTotal");
                }
            }
            if (Optional.IsDefined(ItemOther))
            {
                if (ItemOther != null)
                {
                    writer.WritePropertyName("itemOther");
                    writer.WriteObjectValue(ItemOther);
                }
                else
                {
                    writer.WriteNull("itemOther");
                }
            }
            writer.WriteEndObject();
        }

        internal static RowAnnotationParsed DeserializeRowAnnotationParsed(JsonElement element)
        {
            Optional<TextAnnotation> itemCode = default;
            Optional<DateAnnotation> itemDate = default;
            Optional<TextAnnotation> itemDescription = default;
            Optional<TextAnnotation> itemUnit = default;
            Optional<FloatAnnotation> itemUnitPrice = default;
            Optional<FloatAnnotation> itemQuantity = default;
            Optional<TextAnnotation> itemDiscount = default;
            Optional<FloatAnnotation> itemBaseTotal = default;
            Optional<TextAnnotation> itemTaxRate = default;
            Optional<FloatAnnotation> itemTaxTotal = default;
            Optional<FloatAnnotation> itemTotal = default;
            Optional<TextAnnotation> itemOther = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("itemCode"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemCode = null;
                        continue;
                    }
                    itemCode = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemDate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemDate = null;
                        continue;
                    }
                    itemDate = DateAnnotation.DeserializeDateAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemDescription"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemDescription = null;
                        continue;
                    }
                    itemDescription = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemUnit"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemUnit = null;
                        continue;
                    }
                    itemUnit = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemUnitPrice"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemUnitPrice = null;
                        continue;
                    }
                    itemUnitPrice = FloatAnnotation.DeserializeFloatAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemQuantity"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemQuantity = null;
                        continue;
                    }
                    itemQuantity = FloatAnnotation.DeserializeFloatAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemDiscount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemDiscount = null;
                        continue;
                    }
                    itemDiscount = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemBaseTotal"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemBaseTotal = null;
                        continue;
                    }
                    itemBaseTotal = FloatAnnotation.DeserializeFloatAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemTaxRate"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemTaxRate = null;
                        continue;
                    }
                    itemTaxRate = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemTaxTotal"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemTaxTotal = null;
                        continue;
                    }
                    itemTaxTotal = FloatAnnotation.DeserializeFloatAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemTotal"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemTotal = null;
                        continue;
                    }
                    itemTotal = FloatAnnotation.DeserializeFloatAnnotation(property.Value);
                    continue;
                }
                if (property.NameEquals("itemOther"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        itemOther = null;
                        continue;
                    }
                    itemOther = TextAnnotation.DeserializeTextAnnotation(property.Value);
                    continue;
                }
            }
            return new RowAnnotationParsed(itemCode.Value, itemDate.Value, itemDescription.Value, itemUnit.Value, itemUnitPrice.Value, itemQuantity.Value, itemDiscount.Value, itemBaseTotal.Value, itemTaxRate.Value, itemTaxTotal.Value, itemTotal.Value, itemOther.Value);
        }
    }
}
