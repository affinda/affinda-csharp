// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Affinda.API.Models
{
    /// <summary> The Location. </summary>
    public partial class Location
    {
        /// <summary> Initializes a new instance of Location. </summary>
        /// <param name="rawInput"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="rawInput"/> is null. </exception>
        public Location(string rawInput)
        {
            if (rawInput == null)
            {
                throw new ArgumentNullException(nameof(rawInput));
            }

            RawInput = rawInput;
        }

        /// <summary> Initializes a new instance of Location. </summary>
        /// <param name="formatted"></param>
        /// <param name="postalCode"></param>
        /// <param name="state"></param>
        /// <param name="stateCode"></param>
        /// <param name="country"></param>
        /// <param name="countryCode"> Two letter country code (ISO 3166-1 alpha-2). </param>
        /// <param name="rawInput"></param>
        /// <param name="streetNumber"></param>
        /// <param name="street"></param>
        /// <param name="apartmentNumber"></param>
        /// <param name="city"></param>
        /// <param name="latitude"></param>
        /// <param name="longitude"></param>
        /// <param name="poBox"></param>
        internal Location(string formatted, string postalCode, string state, string stateCode, string country, string countryCode, string rawInput, string streetNumber, string street, string apartmentNumber, string city, float? latitude, float? longitude, string poBox)
        {
            Formatted = formatted;
            PostalCode = postalCode;
            State = state;
            StateCode = stateCode;
            Country = country;
            CountryCode = countryCode;
            RawInput = rawInput;
            StreetNumber = streetNumber;
            Street = street;
            ApartmentNumber = apartmentNumber;
            City = city;
            Latitude = latitude;
            Longitude = longitude;
            PoBox = poBox;
        }

        /// <summary> Gets the formatted. </summary>
        public string Formatted { get; }
        /// <summary> Gets the postal code. </summary>
        public string PostalCode { get; }
        /// <summary> Gets the state. </summary>
        public string State { get; }
        /// <summary> Gets the state code. </summary>
        public string StateCode { get; }
        /// <summary> Gets the country. </summary>
        public string Country { get; }
        /// <summary> Two letter country code (ISO 3166-1 alpha-2). </summary>
        public string CountryCode { get; }
        /// <summary> Gets or sets the raw input. </summary>
        public string RawInput { get; set; }
        /// <summary> Gets the street number. </summary>
        public string StreetNumber { get; }
        /// <summary> Gets the street. </summary>
        public string Street { get; }
        /// <summary> Gets the apartment number. </summary>
        public string ApartmentNumber { get; }
        /// <summary> Gets the city. </summary>
        public string City { get; }
        /// <summary> Gets the latitude. </summary>
        public float? Latitude { get; }
        /// <summary> Gets the longitude. </summary>
        public float? Longitude { get; }
        /// <summary> Gets the po box. </summary>
        public string PoBox { get; }
    }
}
