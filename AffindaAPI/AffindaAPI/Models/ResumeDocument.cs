// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Affinda.API.Models
{
    /// <summary> The ResumeDocument. </summary>
    public partial class ResumeDocument : Document
    {
        /// <summary> Initializes a new instance of ResumeDocument. </summary>
        /// <param name="meta"></param>
        /// <param name="data"> A JSON-encoded string of the `ResumeData` object. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="meta"/> is null. </exception>
        internal ResumeDocument(DocumentMeta meta, ResumeData data) : base(meta)
        {
            if (meta == null)
            {
                throw new ArgumentNullException(nameof(meta));
            }

            Data = data;
            AdditionalProperties = new ChangeTrackingDictionary<string, object>();
            Extractor = "resume";
        }

        /// <summary> Initializes a new instance of ResumeDocument. </summary>
        /// <param name="extractor"></param>
        /// <param name="meta"></param>
        /// <param name="error"></param>
        /// <param name="data"> A JSON-encoded string of the `ResumeData` object. </param>
        /// <param name="additionalProperties"> Additional Properties. </param>
        internal ResumeDocument(string extractor, DocumentMeta meta, Error error, ResumeData data, IReadOnlyDictionary<string, object> additionalProperties) : base(extractor, meta, error)
        {
            Data = data;
            AdditionalProperties = additionalProperties;
            Extractor = extractor ?? "resume";
        }

        /// <summary> A JSON-encoded string of the `ResumeData` object. </summary>
        public ResumeData Data { get; }
        /// <summary> Additional Properties. </summary>
        public IReadOnlyDictionary<string, object> AdditionalProperties { get; }
    }
}
