// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class JobDescriptionSearchDetail
    {
        internal static JobDescriptionSearchDetail DeserializeJobDescriptionSearchDetail(JsonElement element)
        {
            Optional<JobDescriptionSearchDetailJobTitle> jobTitle = default;
            Optional<JobDescriptionSearchDetailLocation> location = default;
            Optional<JobDescriptionSearchDetailEducation> education = default;
            Optional<JobDescriptionSearchDetailSkills> skills = default;
            Optional<JobDescriptionSearchDetailExperience> experience = default;
            Optional<JobDescriptionSearchDetailOccupationGroup> occupationGroup = default;
            Optional<JobDescriptionSearchDetailLanguages> languages = default;
            Optional<JobDescriptionSearchDetailManagementLevel> managementLevel = default;
            Optional<JobDescriptionSearchDetailSearchExpression> searchExpression = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("jobTitle"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    jobTitle = JobDescriptionSearchDetailJobTitle.DeserializeJobDescriptionSearchDetailJobTitle(property.Value);
                    continue;
                }
                if (property.NameEquals("location"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    location = JobDescriptionSearchDetailLocation.DeserializeJobDescriptionSearchDetailLocation(property.Value);
                    continue;
                }
                if (property.NameEquals("education"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    education = JobDescriptionSearchDetailEducation.DeserializeJobDescriptionSearchDetailEducation(property.Value);
                    continue;
                }
                if (property.NameEquals("skills"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    skills = JobDescriptionSearchDetailSkills.DeserializeJobDescriptionSearchDetailSkills(property.Value);
                    continue;
                }
                if (property.NameEquals("experience"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    experience = JobDescriptionSearchDetailExperience.DeserializeJobDescriptionSearchDetailExperience(property.Value);
                    continue;
                }
                if (property.NameEquals("occupationGroup"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    occupationGroup = JobDescriptionSearchDetailOccupationGroup.DeserializeJobDescriptionSearchDetailOccupationGroup(property.Value);
                    continue;
                }
                if (property.NameEquals("languages"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    languages = JobDescriptionSearchDetailLanguages.DeserializeJobDescriptionSearchDetailLanguages(property.Value);
                    continue;
                }
                if (property.NameEquals("managementLevel"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    managementLevel = JobDescriptionSearchDetailManagementLevel.DeserializeJobDescriptionSearchDetailManagementLevel(property.Value);
                    continue;
                }
                if (property.NameEquals("searchExpression"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    searchExpression = JobDescriptionSearchDetailSearchExpression.DeserializeJobDescriptionSearchDetailSearchExpression(property.Value);
                    continue;
                }
            }
            return new JobDescriptionSearchDetail(jobTitle.Value, location.Value, education.Value, skills.Value, experience.Value, occupationGroup.Value, languages.Value, managementLevel.Value, searchExpression.Value);
        }
    }
}
