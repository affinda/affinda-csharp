// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class Workspace
    {
        internal static Workspace DeserializeWorkspace(JsonElement element)
        {
            string identifier = default;
            Optional<Organization> organization = default;
            Optional<string> name = default;
            Optional<WorkspaceVisibility> visibility = default;
            Optional<IReadOnlyList<WorkspaceCollectionsItem>> collections = default;
            Optional<bool> rejectInvalidDocuments = default;
            Optional<string> rejectDuplicates = default;
            Optional<IReadOnlyList<User>> members = default;
            Optional<int> unvalidatedDocsCount = default;
            Optional<int> confirmedDocsCount = default;
            Optional<string> ingestEmail = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("identifier"))
                {
                    identifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("organization"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    organization = Organization.DeserializeOrganization(property.Value);
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("visibility"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    visibility = new WorkspaceVisibility(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("collections"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<WorkspaceCollectionsItem> array = new List<WorkspaceCollectionsItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(WorkspaceCollectionsItem.DeserializeWorkspaceCollectionsItem(item));
                    }
                    collections = array;
                    continue;
                }
                if (property.NameEquals("rejectInvalidDocuments"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    rejectInvalidDocuments = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("rejectDuplicates"))
                {
                    rejectDuplicates = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("members"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<User> array = new List<User>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(User.DeserializeUser(item));
                    }
                    members = array;
                    continue;
                }
                if (property.NameEquals("unvalidatedDocsCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    unvalidatedDocsCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("confirmedDocsCount"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    confirmedDocsCount = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("ingestEmail"))
                {
                    ingestEmail = property.Value.GetString();
                    continue;
                }
            }
            return new Workspace(identifier, organization.Value, name.Value, Optional.ToNullable(visibility), Optional.ToList(collections), Optional.ToNullable(rejectInvalidDocuments), rejectDuplicates.Value, Optional.ToList(members), Optional.ToNullable(unvalidatedDocsCount), Optional.ToNullable(confirmedDocsCount), ingestEmail.Value);
        }
    }
}
