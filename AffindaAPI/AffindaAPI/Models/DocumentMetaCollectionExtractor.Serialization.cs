// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class DocumentMetaCollectionExtractor : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteNumberValue(Id.Value);
            }
            if (Optional.IsDefined(Identifier))
            {
                writer.WritePropertyName("identifier");
                writer.WriteStringValue(Identifier);
            }
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(BaseExtractor))
            {
                if (BaseExtractor != null)
                {
                    writer.WritePropertyName("baseExtractor");
                    writer.WriteNumberValue(BaseExtractor.Value);
                }
                else
                {
                    writer.WriteNull("baseExtractor");
                }
            }
            if (Optional.IsDefined(Validatable))
            {
                writer.WritePropertyName("validatable");
                writer.WriteBooleanValue(Validatable.Value);
            }
            writer.WriteEndObject();
        }

        internal static DocumentMetaCollectionExtractor DeserializeDocumentMetaCollectionExtractor(JsonElement element)
        {
            Optional<int> id = default;
            Optional<string> identifier = default;
            Optional<string> name = default;
            Optional<int?> baseExtractor = default;
            Optional<bool> validatable = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    id = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("identifier"))
                {
                    identifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("baseExtractor"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        baseExtractor = null;
                        continue;
                    }
                    baseExtractor = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("validatable"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    validatable = property.Value.GetBoolean();
                    continue;
                }
            }
            return new DocumentMetaCollectionExtractor(Optional.ToNullable(id), identifier.Value, name.Value, Optional.ToNullable(baseExtractor), Optional.ToNullable(validatable));
        }
    }
}
