// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class JobTitleAnnotationParsed : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                if (Name != null)
                {
                    writer.WritePropertyName("name");
                    writer.WriteStringValue(Name);
                }
                else
                {
                    writer.WriteNull("name");
                }
            }
            if (Optional.IsDefined(ManagementLevel))
            {
                if (ManagementLevel != null)
                {
                    writer.WritePropertyName("managementLevel");
                    writer.WriteStringValue(ManagementLevel);
                }
                else
                {
                    writer.WriteNull("managementLevel");
                }
            }
            if (Optional.IsDefined(Classification))
            {
                if (Classification != null)
                {
                    writer.WritePropertyName("classification");
                    writer.WriteObjectValue(Classification);
                }
                else
                {
                    writer.WriteNull("classification");
                }
            }
            writer.WriteEndObject();
        }

        internal static JobTitleAnnotationParsed DeserializeJobTitleAnnotationParsed(JsonElement element)
        {
            Optional<string> name = default;
            Optional<string> managementLevel = default;
            Optional<JobTitleAnnotationParsedClassification> classification = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        name = null;
                        continue;
                    }
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("managementLevel"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        managementLevel = null;
                        continue;
                    }
                    managementLevel = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("classification"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        classification = null;
                        continue;
                    }
                    classification = JobTitleAnnotationParsedClassification.DeserializeJobTitleAnnotationParsedClassification(property.Value);
                    continue;
                }
            }
            return new JobTitleAnnotationParsed(name.Value, managementLevel.Value, classification.Value);
        }
    }
}
