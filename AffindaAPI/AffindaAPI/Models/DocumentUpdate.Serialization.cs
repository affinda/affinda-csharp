// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class DocumentUpdate : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Collection))
            {
                writer.WritePropertyName("collection");
                writer.WriteStringValue(Collection);
            }
            if (Optional.IsDefined(FileName))
            {
                if (FileName != null)
                {
                    writer.WritePropertyName("fileName");
                    writer.WriteStringValue(FileName);
                }
                else
                {
                    writer.WriteNull("fileName");
                }
            }
            if (Optional.IsDefined(ExpiryTime))
            {
                if (ExpiryTime != null)
                {
                    writer.WritePropertyName("expiryTime");
                    writer.WriteStringValue(ExpiryTime);
                }
                else
                {
                    writer.WriteNull("expiryTime");
                }
            }
            if (Optional.IsDefined(IsConfirmed))
            {
                writer.WritePropertyName("isConfirmed");
                writer.WriteBooleanValue(IsConfirmed.Value);
            }
            if (Optional.IsDefined(IsRejected))
            {
                writer.WritePropertyName("isRejected");
                writer.WriteBooleanValue(IsRejected.Value);
            }
            if (Optional.IsDefined(IsArchived))
            {
                writer.WritePropertyName("isArchived");
                writer.WriteBooleanValue(IsArchived.Value);
            }
            if (Optional.IsDefined(SkipParse))
            {
                writer.WritePropertyName("skipParse");
                writer.WriteBooleanValue(SkipParse.Value);
            }
            if (Optional.IsDefined(Language))
            {
                if (Language != null)
                {
                    writer.WritePropertyName("language");
                    writer.WriteStringValue(Language);
                }
                else
                {
                    writer.WriteNull("language");
                }
            }
            if (Optional.IsDefined(Identifier))
            {
                writer.WritePropertyName("identifier");
                writer.WriteStringValue(Identifier);
            }
            if (Optional.IsDefined(CustomIdentifier))
            {
                writer.WritePropertyName("customIdentifier");
                writer.WriteStringValue(CustomIdentifier);
            }
            writer.WriteEndObject();
        }
    }
}
