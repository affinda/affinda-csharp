// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class PageMeta : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("id");
            writer.WriteNumberValue(Id);
            writer.WritePropertyName("pageIndex");
            writer.WriteNumberValue(PageIndex);
            if (Image != null)
            {
                writer.WritePropertyName("image");
                writer.WriteStringValue(Image);
            }
            else
            {
                writer.WriteNull("image");
            }
            writer.WritePropertyName("height");
            writer.WriteNumberValue(Height);
            writer.WritePropertyName("width");
            writer.WriteNumberValue(Width);
            writer.WritePropertyName("rotation");
            writer.WriteNumberValue(Rotation);
            writer.WriteEndObject();
        }

        internal static PageMeta DeserializePageMeta(JsonElement element)
        {
            int id = default;
            int pageIndex = default;
            string image = default;
            float height = default;
            float width = default;
            int rotation = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"))
                {
                    id = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("pageIndex"))
                {
                    pageIndex = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("image"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        image = null;
                        continue;
                    }
                    image = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("height"))
                {
                    height = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("width"))
                {
                    width = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("rotation"))
                {
                    rotation = property.Value.GetInt32();
                    continue;
                }
            }
            return new PageMeta(id, pageIndex, image, height, width, rotation);
        }
    }
}
