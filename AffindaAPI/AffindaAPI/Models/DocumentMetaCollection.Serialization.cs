// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class DocumentMetaCollection : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("identifier");
            writer.WriteStringValue(Identifier);
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(Extractor))
            {
                writer.WritePropertyName("extractor");
                writer.WriteObjectValue(Extractor);
            }
            if (Optional.IsCollectionDefined(ValidationRules))
            {
                writer.WritePropertyName("validationRules");
                writer.WriteStartArray();
                foreach (var item in ValidationRules)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static DocumentMetaCollection DeserializeDocumentMetaCollection(JsonElement element)
        {
            string identifier = default;
            Optional<string> name = default;
            Optional<DocumentMetaCollectionExtractor> extractor = default;
            Optional<IList<ValidationRule>> validationRules = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("identifier"))
                {
                    identifier = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("extractor"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    extractor = DocumentMetaCollectionExtractor.DeserializeDocumentMetaCollectionExtractor(property.Value);
                    continue;
                }
                if (property.NameEquals("validationRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ValidationRule> array = new List<ValidationRule>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ValidationRule.DeserializeValidationRule(item));
                    }
                    validationRules = array;
                    continue;
                }
            }
            return new DocumentMetaCollection(identifier, name.Value, extractor.Value, Optional.ToList(validationRules));
        }
    }
}
