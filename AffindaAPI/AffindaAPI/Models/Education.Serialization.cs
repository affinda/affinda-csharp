// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Affinda.API.Models
{
    public partial class Education
    {
        internal static Education DeserializeEducation(JsonElement element)
        {
            Optional<string> organization = default;
            Optional<Accreditation> accreditation = default;
            Optional<string> grade = default;
            Optional<Location> location = default;
            Optional<EducationDates> dates = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("organization"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        organization = null;
                        continue;
                    }
                    organization = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("accreditation"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    accreditation = Accreditation.DeserializeAccreditation(property.Value);
                    continue;
                }
                if (property.NameEquals("grade"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        grade = null;
                        continue;
                    }
                    grade = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("location"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        location = null;
                        continue;
                    }
                    location = Location.DeserializeLocation(property.Value);
                    continue;
                }
                if (property.NameEquals("dates"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        dates = null;
                        continue;
                    }
                    dates = EducationDates.DeserializeEducationDates(property.Value);
                    continue;
                }
            }
            return new Education(organization.Value, accreditation.Value, grade.Value, location.Value, dates.Value);
        }
    }
}
